#!/bin/bash

# CONFIG
PATH_WWW="/Users/timur/www";
PATH_SOURCE="${PATH_WWW}/gulp-web";
FILE_HOSTS="/etc/hosts";
FILE_HOSTS_TMP="${PATH_WWW}/hosts.tmp";

# STR
STR_TYPE_LIST='\n1 - новый (gulp) \n2 - новый (пустой)\n3 - обновить hosts\n4 - удалить проект\n\nВведите цифру:';
STR_TYPE_ERR='Пожалуйста введите цифру от 1 до 4';
STR_ENABLE='Проекты:';
STR_PROJECT='проект:';
STR_NAME_ERR='Пожалуйста, введите название проекта';
STR_NEW='Новый проект: ';
STR_NEW_ERR='Вы ввели название существующего проекта';

function readProjectName () {
    echo -ne "\n${STR_PROJECT} ";
    read PROJECT_NAME;
    if [[ ! "${PROJECT_NAME}" ]]; then
        echo -e "\n${STR_NAME_ERR}";
        readProjectName;
    fi
    PROJECT_PATH="${PATH_WWW}/${PROJECT_NAME}";
    if [[ $1 != false ]]; then
        if [[ -d "${PROJECT_PATH}" ]]; then
            echo -e "\n${STR_NEW_ERR}";
            readProjectName;
        fi
    fi
}

function updateHostsFile () {
    newHosts='### local server start ###';
    for project in $(ls -d "${PATH_WWW}/"*/); do
        locHost="127.0.0.1 $(basename "${project}").loc";
        newHosts="$newHosts\n${locHost}";
    done
    newHosts="${newHosts}\n### local server end ###";
    sed "/### local server start ###/,/### local server end ###/d" $FILE_HOSTS > $FILE_HOSTS_TMP;
    echo -e $newHosts >> $FILE_HOSTS_TMP;
    sudo mv $FILE_HOSTS_TMP $FILE_HOSTS;
}

function newProject () {
    readProjectName;
    mkdir "${PROJECT_PATH}";
    rsync -r "${PATH_SOURCE}/" "${PROJECT_PATH}" --exclude={'node_modules','bin','.git','.gitignore'};
    ln -s "${PATH_SOURCE}/node_modules" "${PROJECT_PATH}/node_modules";
    updateHostsFile;
}

function newProjectEmpty () {
    readProjectName;
    mkdir -p "${PROJECT_PATH}/public_html";
    updateHostsFile;
}

function rmProject () {
    readProjectName false;
    rm -rf "/${PATH_WWW}/${PROJECT_NAME}";
    updateHostsFile;
}

function init () {
    echo -e "\n${STR_ENABLE}\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n";
    ls "${PATH_WWW}/";
    echo -e "_ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n";
    echo -ne "${STR_TYPE_LIST} ";
    read TYPE;
    case "${TYPE}" in
        "1" ) newProject ;;
        "2" ) newProjectEmpty ;;
        "3" ) updateHostsFile;;
        "4" ) rmProject ;;
        * )
            echo -e "\n${STR_TYPE_ERR}";
            init;
            return 0;
        ;;
    esac
}

init;
